assert = typeof global !== 'undefined' ? require('assert') : assert;

var jsdom = [
"console",
"ArrayBuffer",
"Uint8Array",
"Int8Array",
"Uint16Array",
"Int16Array",
"Uint32Array",
"Int32Array",
"Float32Array",
"Float64Array",
"Uint8ClampedArray",
"WebSocket",
"StorageEvent",
"Storage",
"CloseEvent",
"postMessage",
"blur",
"focus",
"close",
"XPathResult",
"XPathExpression",
"XPathEvaluator",
"XMLSerializer",
"XMLHttpRequestUpload",
"XMLHttpRequestEventTarget",
"XMLHttpRequest",
"XMLDocument",
"Window",
"WheelEvent",
"ValidityState",
"URLSearchParams",
"URL",
"UIEvent",
"TreeWalker",
"TouchEvent",
"Text",
"StyleSheetList",
"StyleSheet",
"ShadowRoot",
"Screen",
"SVGStringList",
"SVGSVGElement",
"SVGNumber",
"SVGGraphicsElement",
"SVGElement",
"SVGAnimatedString",
"ProgressEvent",
"ProcessingInstruction",
"PopStateEvent",
"Performance",
"NodeList",
"NodeIterator",
"NodeFilter",
"Node",
"NamedNodeMap",
"MouseEvent",
"MessageEvent",
"MediaList",
"Location",
"KeyboardEvent",
"InputEvent",
"History",
"HashChangeEvent",
"HTMLVideoElement",
"HTMLUnknownElement",
"HTMLUListElement",
"HTMLTrackElement",
"HTMLTitleElement",
"HTMLTimeElement",
"HTMLTextAreaElement",
"HTMLTemplateElement",
"HTMLTableSectionElement",
"HTMLTableRowElement",
"HTMLTableElement",
"HTMLTableColElement",
"HTMLTableCellElement",
"HTMLTableCaptionElement",
"HTMLStyleElement",
"HTMLSpanElement",
"HTMLSourceElement",
"HTMLSlotElement",
"HTMLSelectElement",
"HTMLScriptElement",
"HTMLQuoteElement",
"HTMLProgressElement",
"HTMLPreElement",
"HTMLPictureElement",
"HTMLParamElement",
"HTMLParagraphElement",
"HTMLOutputElement",
"HTMLOptionsCollection",
"Option",
"HTMLOptionElement",
"HTMLOptGroupElement",
"HTMLObjectElement",
"HTMLOListElement",
"HTMLModElement",
"HTMLMeterElement",
"HTMLMetaElement",
"HTMLMenuElement",
"HTMLMediaElement",
"HTMLMarqueeElement",
"HTMLMapElement",
"HTMLLinkElement",
"HTMLLegendElement",
"HTMLLabelElement",
"HTMLLIElement",
"HTMLInputElement",
"Image",
"HTMLImageElement",
"HTMLIFrameElement",
"HTMLHtmlElement",
"HTMLHeadingElement",
"HTMLHeadElement",
"HTMLHRElement",
"HTMLFrameSetElement",
"HTMLFrameElement",
"HTMLFormElement",
"HTMLFontElement",
"HTMLFieldSetElement",
"HTMLEmbedElement",
"HTMLElement",
"HTMLDocument",
"HTMLDivElement",
"HTMLDirectoryElement",
"HTMLDialogElement",
"HTMLDetailsElement",
"HTMLDataListElement",
"HTMLDataElement",
"HTMLDListElement",
"HTMLCollection",
"HTMLCanvasElement",
"HTMLButtonElement",
"HTMLBodyElement",
"HTMLBaseElement",
"HTMLBRElement",
"Audio",
"HTMLAudioElement",
"HTMLAreaElement",
"HTMLAnchorElement",
"FormData",
"FocusEvent",
"FileReader",
"FileList",
"File",
"EventTarget",
"Event",
"ErrorEvent",
"Element",
"DocumentType",
"DocumentFragment",
"Document",
"DOMTokenList",
"DOMStringMap",
"DOMParser",
"DOMImplementation",
"DOMException",
"CustomEvent",
"CompositionEvent",
"Comment",
"CharacterData",
"CSSStyleSheet",
"CSSStyleRule",
"CSSStyleDeclaration",
"CSSRule",
"CSSMediaRule",
"CSSImportRule",
"CDATASection",
"Blob",
"BarProp",
"Attr",
"AbortSignal",
"AbortController",
"parent",
"top",
"length",
"frames",
"location",
"self",
"window",
"document",
"name",
"history",
"locationbar",
"menubar",
"personalbar",
"scrollbars",
"statusbar",
"toolbar",
"status",
"frameElement",
"navigator",
"external",
"screen",
"innerWidth",
"innerHeight",
"scrollX",
"pageXOffset",
"scrollY",
"pageYOffset",
"screenX",
"screenY",
"outerWidth",
"outerHeight",
"devicePixelRatio",
"screenLeft",
"screenTop",
"onabort",
"onblur",
"oncancel",
"oncanplay",
"oncanplaythrough",
"onchange",
"onclick",
"onclose",
"oncontextmenu",
"oncuechange",
"ondblclick",
"ondrag",
"ondragend",
"ondragenter",
"ondragleave",
"ondragover",
"ondragstart",
"ondrop",
"ondurationchange",
"onemptied",
"onended",
"onerror",
"onfocus",
"oninput",
"oninvalid",
"onkeydown",
"onkeypress",
"onkeyup",
"onload",
"onloadeddata",
"onloadedmetadata",
"onloadstart",
"onmousedown",
"onmouseenter",
"onmouseleave",
"onmousemove",
"onmouseout",
"onmouseover",
"onmouseup",
"onpause",
"onplay",
"onplaying",
"onprogress",
"onratechange",
"onreset",
"onresize",
"onscroll",
"onseeked",
"onseeking",
"onselect",
"onstalled",
"onsubmit",
"onsuspend",
"ontimeupdate",
"ontoggle",
"onvolumechange",
"onwaiting",
"onwheel",
"onbeforeprint",
"onbeforeunload",
"onhashchange",
"onlanguagechange",
"onmessage",
"onmessageerror",
"onoffline",
"ononline",
"onpagehide",
"onpageshow",
"onpopstate",
"onrejectionhandled",
"onstorage",
"onunhandledrejection",
"onunload",
"performance",
"stop",
"open",
"alert",
"confirm",
"prompt",
"print",
"captureEvents",
"releaseEvents",
"getComputedStyle",
"moveTo",
"moveBy",
"resizeTo",
"resizeBy",
"btoa",
"atob",
"setTimeout",
"clearTimeout",
"setInterval",
"clearInterval",
"scroll",
"scrollTo",
"scrollBy",
"sessionStorage",
"localStorage"
];

var coreNodeBrowserGlobal = [
'Object',
'Function',
'Array',
'Number',
'parseFloat',
'parseInt',
'Infinity',
'NaN',
'undefined',
'Boolean',
'String',
'Symbol',
'Date',
'Promise',
'RegExp',
'Error',
'EvalError',
'RangeError',
'ReferenceError',
'SyntaxError',
'TypeError',
'URIError',
'JSON',
'Math',
'console',
'ArrayBuffer',
'Uint8Array',
'Int8Array',
'Uint16Array',
'Int16Array',
'Uint32Array',
'Int32Array',
'Float32Array',
'Float64Array',
'Uint8ClampedArray',
'DataView',
'Map',
'Set',
'WeakMap',
'WeakSet',
'Proxy',
'Reflect',
'decodeURI',
'decodeURIComponent',
'encodeURI',
'encodeURIComponent',
'escape',
'unescape',
'eval',
'isFinite',
'isNaN',
'WebAssembly',
//'global',         // node specific
//'process',        // node specific
//'GLOBAL', // deprecated, node specific
//'root',   // deprecated, node specific
//'Buffer',         // node specific
//'clearImmediate', // node specific
'clearInterval',
'clearTimeout',
//'setImmediate',   // node specific
'setInterval',
'setTimeout'
];

describe('js prooerties', function() {
  describe('core', function() {
    var root = typeof global !== 'undefined' ? global : window;
    coreNodeBrowserGlobal.forEach(function(value){
      it(value,function(){
        assert.equal(typeof root[value] !== 'undefined',true);
      });
    });
  });
  describe('browser', function() {
    var root = typeof global !== 'undefined' ? global : window;
    jsdom.forEach(function(value){
      it(value,function(){
        assert.equal(typeof root[value] !== 'undefined',true);
      });
    });
  });
});